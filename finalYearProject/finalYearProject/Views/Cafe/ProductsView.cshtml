@model finalYearProject.ViewModel.PUCITShowViewModel
<!DOCTYPE html>
@{
    var category = ViewBag.Categoryname;
    var uname = ViewBag.uname;
    var cafe = ViewBag.cafe;
}
<html lang="en">
<head>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css" integrity="sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ" crossorigin="anonymous">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BmbxuPwQa2lc/FVzBcNJ7UAyJxM6wuqIj61tLrc4wSX0szH/Ev+nYRRuWlolflfl" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.bundle.min.js" integrity="sha384-b5kHyXgcpbZJO/tY9Ul7kGkf1S0CWuKcCD38l8YkeH8z8QjE0GmW1gYU5S9FOnJ0" crossorigin="anonymous"></script>
    <title>Bootstrap Example</title>
    <meta charset="utf-8">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css" integrity="sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ" crossorigin="anonymous">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script>
        function Delete(e) {
            console.log("In delete ffunction");
        }
    </script>


    <style type="text/css">
        .height {
            height: 180px;
        }

        .card {
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
            max-width: 300px;
            margin: auto;
            text-align: center;
            font-family: arial;
        }

            .card a {
                border: none;
                outline: 0;
                padding: 12px;
                color: white;
                background-color: #000;
                text-align: center;
                cursor: pointer;
                width: 100%;
                font-size: 18px;
            }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        .card {
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
            max-width: 300px;
            margin: auto;
            text-align: center;
            font-family: arial;
        }

        .price {
            color: grey;
            font-size: 22px;
        }

        .card button {
            border: none;
            outline: 0;
            padding: 12px;
            color: white;
            background-color: #000;
            text-align: center;
            cursor: pointer;
            width: 100%;
            font-size: 18px;
        }

            .card button:hover {
                opacity: 0.7;
            }

        .topnav {
            overflow: hidden;
            background-color: #333;
        }

            .topnav a {
                float: left;
                color: #f2f2f2;
                text-align: center;
                padding: 14px 16px;
                text-decoration: none;
                font-size: 17px;
            }

                .topnav a:hover {
                    background-color: #ddd;
                    color: black;
                }

        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1; /* Sit on top */
            padding-top: 100px; /* Location of the box */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgb(0,0,0); /* Fallback color */
            background-color: rgba(0,0,0,0.4);
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1; /* Sit on top */
            padding-top: 100px; /* Location of the box */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgb(0,0,0); /* Fallback color */
            background-color: rgba(0,0,0,0.4);
        }

        .modal-content {
            background-color: #fefefe;
            margin: auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
        }

        .close {
            color: #aaaaaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: #000;
                text-decoration: none;
                cursor: pointer;
            }

        i {
            margin-right: 10px;
        }

        input:focus,
        button:focus,
        .form-control:focus {
            box-shadow: none;
            outline: none;
        }

        .form-control:disabled, .form-control[readonly] {
            background-color: #fff;
        }

        .table tr, .table tr td {
            vertical-align: middle;
        }

        .button-container {
            display: flex;
            align-items: center;
        }

            .button-container .form-control {
                max-width: 80px;
                text-align: center;
                display: inline-block;
                margin: 0px 5px;
            }

        #mytable .form-control {
            width: auto;
            display: inline-block;
        }

        .cart-qty-plus {
            width: 38px;
            height: 38px;
            background-color: #fff;
            border: 1px solid #ce44da;
            border-radius: .25rem;
        }

        .product-img img {
            width: 70px;
        }

        .make {
            background-color: #fff;
        }
    </style>
</head>
<body>
    <header>
        <!-- sTART OF hOME PAGE-->
        <!-- sTART OF hOME PAGE-->
        <nav class="navbar navbar-light bg-dark">
            <div class="container-fluid" style="padding:10px;">
                <a class="nav-link disabled" href="#" aria-disabled="true">PUCIT Dept Cafe System</a>
                <form class="d-flex">
                    <ul class=" nav justify-content-end">
                        <li class="nav-item">
                            <a class="nav-link active" aria-current="page" asp-controller="Cafe" asp-action="PucitCafe">Home</a>
                        </li>

                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-expanded="false">Menu</a>
                            <ul class="dropdown-menu" style="background-color:white; text-emphasis-color:white">
                                @foreach (finalYearProject.Models.PUCITCafeCategory p in Model.Category)
                                {
                                    <li><a asp-action="ProductsView" asp-route-uname="@uname" asp-route-cafe="@cafe" asp-route-CategoryName="@p.CategoryName" class="dropdown-item">@p.CategoryName</a></li>

                                }
                            </ul>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link active" aria-current="page" onclick="finshProduct()" >Submit Order</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link active" aria-current="page" asp-route-cafe="@cafe" asp-route-uname="@uname"asp-action="SubmitOrder">Ordered List</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link active" aria-current="page" asp-action="HomePage">Exit</a>
                        </li>
                    </ul>
                </form>
            </div>
        </nav>
    </header>
    <div class="increse" style="margin-left:5px;margin-top:5px;">
        <h1 id="myBtn"><i class="fa fa-shopping-cart"></i><span>0</span></h1>
    </div>
    <!--End of Home PAGE-->
    <!-- Start of Menu Section-->
    <section id="menu" class="menu ">
        <div class="container">
            <!--<div class="section-title">
                <h2 class="text-center font-weight-bold pt-5 text-capitalize">Menu Categories</h2>
                <hr class="2-25 mx-auto pt-3">
                <p>
                    A distinct section of a piece of writing, usually dealing
                    with a single theme and indicated by a new line, indentation, or
                    numbering.a distinct section of a piece of writing, usually dealing
                    with a single theme and indicated by a new line, indentation, or
                    numbering.
                </p>
            </div>-->
            <!--START OF CARD DECTIOM-->
            <div class="row mt-3 ">
                @foreach (finalYearProject.Models.PUCITProducts p in Model.productlist)
                {
                    <!--START OF CARD -->
                    <div class="col-md-4 d-flex align-items-stretch">
                        <!-- <div class="card">

                            <img src="~/images/@p.PhotoPath" class="card-img-top height" alt="...">

                            <div class="card-body">
                                <h5 class="card-title">
                                    <a asp-action="ProductDetail" asp-route-id="@p.Id">@p.Name</a>
                                </h5>
                                <p class="card-text text-center">
                                    Price: $ @p.Price
                                </p>
                            </div>
                        </div>
                        -->
                        <div class="card">
                            <h1 style="display:none" class="overflow-hidden">@p.Id</h1>
                            <img src="~/images/@p.PhotoPath" class="height" alt="Denim Jeans" style="width:100%">
                            <h1>@p.Name</h1>
                            <p class="price">Rs.@p.Price</p>
                            <p style="display:none" class="price">@category</p>
                            <a class="add-cart" href="#">Add to Cart</a>
                        </div>

                    </div>
                }
            </div>


        </div>

    </section><!--Cart Viiew-->
    <!-- The Modal -->
    <div id="myModal" class="modal">

        <!-- Modal content -->
        <div class="modal-content">
            <span class="close">&times;</span>
            <h1 class="text-center text-capitalize mb-5">Product Cart</h1>
            <div class="row justify-content-center">
                <div class="col-md-11">
                    <div class="table-responsive">
                        <button style="margin-bottom:10px;" class="btn btn-green" onclick="deleteItems()">Clear Cart</button>

                        <table id="mytable" class="table">
                            <!--  <thead>
                                <tr>
                                  <th>Product</th>
                                  <th>Name</th>
                                  <th>Qty</th>
                                  <th>Price</th>

                                </tr>
                              </thead>
                            <tbody class="table-body">
                            </tbody>-->

                        </table>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--Java Script Code-->
    <script type="text/javascript">
        
        function finshProduct() {
            console.log("Finshded Prodcut");
            let items = [];
            //product convert
               let cart = localStorage.getItem("productsforadmin");
            let cartItems = localStorage.getItem("productsInCart");
           
            cartItems = JSON.parse(cartItems);
           cart = JSON.parse(cart);
         localStorage.clear();
            if (cartItems != null) {
                
                 cartItems.map(data =>{
                     
                        items.push(data);
                    
                })
                
            }
              if (cart != null) {
                
                 cart.map(data =>{
                     
                        items.push(data);
                    
                })
                
            }
           localStorage.setItem("productsforadmin", JSON.stringify(items));
        }
        /*const cartBox=document.querySelector(".modal-content");
        const cardboxtable=cartBox.querySelector("table");
        let tableData="";
        tableData+="<tr><th>Item Name      </th><th>item no     </th><th>item price   </th><th>     item Description    </th></tr>";
        if(cartBox &&  JSON.parse(localStorage.getItem("productsInCart"))
        {

        cartBox.innerHTML="";
        Object.values(JSON.parse(localStorage.getItem("productsInCart")).map(item=>{
          cartBox.innerHTML+
        }))
        *?
          /*JSON.parse(localStorage.getItem("productsInCart")).map(data=>{
        tableData+="<tr><th>"+data.Name+"</th><th>"+data.inCart+"</th><th>"+data.Price+"</th><th>"+data.Para+"</th></tr>";
          });*/
        //}
        //cardboxtable.innerHTML=tableData;

        localStorage.setItem("id", 0);
        function displayCart() {
            let cartItems = localStorage.getItem("productsInCart");
            cartItems = JSON.parse(cartItems);
            let cartBox = document.querySelector(".modal-content");
            let tablecontent = cartBox.querySelector("table");
            let tabledata = "";
            tabledata += `<thead class="make">
                                            <tr>
                                              <th>Product Id</th>
         <th>Product Category</th>
                                              <th>Product Name</th>
                                              <th>Qty</th>
                                              <th>Price</th>
                                               <th></th>

                                            </tr><thead>`;
            if (cartItems) {
                Object.values(cartItems).map(item => {
                    tabledata += `<tbody >


<tr>

                                              <td>
                                                <div class="product-img" >
                                                  <p>${item.Id}</p>
                                                </div>
                                              </td>

                                               <td>
                                                  <p>${item.Para}</p>
                                              </td >

                                              <td>
                                                <p>${item.Name}</p>
                                              </td>

                                              <td>
                                                <div class="button-conatiner">
                                                <p>${item.inCart}</p>
                                                </div>
                                              </td>

                                              <td>
                                                 <p>${item.Price}</p>
                                              </td >

                                                <td>
                                                <button class="removeItem btn btn-danger">Remove</button>
                                              </td  >

                                            </tr>
                                            <tbody>
                                           `;
                    tablecontent.innerHTML = tabledata;
                })
            }
        }


        function deleteItems() {
            localStorage.clear();
            window.location.reload();
        }
        var modal = document.getElementById("myModal");
        var btn = document.getElementById("myBtn");
        var span = document.getElementsByClassName("close")[0];
        btn.onclick = function () {
            modal.style.display = "block";
        }
        span.onclick = function () {
            modal.style.display = "none";
        }

        window.onclick = function (event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }
        var carts = document.querySelectorAll(".add-cart");
        var button = document.getElementsByClassName('add-cart');

        for (but of button) {
            but.addEventListener('click', (e) => {

                var parent = e.target.parentNode;
                cartNumbers(parent);
                console.log(parent);
            });
        }
        function onLoadCardNumbers() {
            let productNumbers = localStorage.getItem("cartNumbers");
            if (productNumbers) {
                document.querySelector(".increse span").textContent = productNumbers;
            }
        }
        function cartNumbers(product) {

            let productNumbers = localStorage.getItem("cartNumbers");
            productNumbers = parseInt(productNumbers);
            if (productNumbers) {
                localStorage.setItem("cartNumbers", productNumbers + 1);
                document.querySelector(".increse span").textContent = productNumbers + 1;
            }
            else {
                localStorage.setItem("cartNumbers", 1);
                document.querySelector(".increse span").textContent = 1;
            }
            setItems(product);
            /* let products=localStorage.getItem("product");
                localStorage.setItem("product",product);
           */
        }

        function setItems(product) {
            let id = product.children[0].textContent;
            let name = product.children[2].textContent;
            let price = product.children[3].textContent;
            let para = product.children[4].textContent;

            console.log(id);
            let items = [];

            let pro = new Object();
            pro.cafe = "@cafe";
            pro.userId="@uname";
            pro.Id = id;
            pro.Name = name;
            pro.Price = price;
            pro.Para ="@category";
            pro.inCart = 1;
            pro.time = "Pending";
            console.log("The product clicked is", product);
            //product convert
            let cartItems = localStorage.getItem("productsInCart");
            cartItems = JSON.parse(cartItems);

            if (cartItems === null) {
                items.push(pro);
                localStorage.setItem("productsInCart", JSON.stringify(items));
                  window.location.reload();
            }
            else {
                cartItems.map(data => {
                    if (pro.Name === data.Name) {
                        pro.inCart = data.inCart + 1;
                    }
                    else {


                        items.push(data);
                    }
                })
                items.push(pro);
                localStorage.setItem("productsInCart", JSON.stringify(items));
                  window.location.reload();
            }
        }
        onLoadCardNumbers();
        displayCart();
        const remove = document.getElementsByClassName('removeItem');
        for (var i = 0; i < remove.length; i++) {
            let removebtn = remove[i];
            let items = [];

            removebtn.addEventListener('click', () => {
                console.log("hello");
                let cartItems = localStorage.getItem("productsInCart");
                cartItems = JSON.parse(cartItems);
                const number = event.target.parentElement.parentElement.children[3].children[0].textContent;
                cartItems.map(data => {
                    if (data.Name != event.target.parentElement.parentElement.children[2].children[0].textContent) {
                        items.push(data);
                    }
                })
                let productNumbers = localStorage.getItem("cartNumbers");
                productNumbers = parseInt(productNumbers);
                if (productNumbers);
                {
                    localStorage.setItem("cartNumbers", productNumbers - number);
                    document.querySelector(".increse span").textContent = productNumbers - number;
                }
                localStorage.setItem("productsInCart", JSON.stringify(items));
                window.location.reload();
            })
        }
        
    </script>
</body>
</html>
